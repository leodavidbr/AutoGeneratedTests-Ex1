package imd.ufrn;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test01() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test01");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        java.lang.Class<?> wildcardClass6 = doubleArray3.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test02() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test02");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        java.lang.Class<?> wildcardClass1 = financialDataAnalysis0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test03() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test03");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        double double12 = financialDataAnalysis0.calculateAverage(doubleArray9);
        java.lang.Class<?> wildcardClass13 = financialDataAnalysis0.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test04() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test04");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis12 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray16 = new double[] {};
        double double17 = financialDataAnalysis12.calculatePearsonCorrelation(doubleArray15, doubleArray16);
        double double18 = financialDataAnalysis6.calculateAverage(doubleArray15);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis19 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis20 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray24 = new double[] {};
        double double25 = financialDataAnalysis20.calculatePearsonCorrelation(doubleArray23, doubleArray24);
        double double26 = financialDataAnalysis19.calculateAverage(doubleArray23);
        double double27 = financialDataAnalysis6.calculateAverage(doubleArray23);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis28 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray32 = new double[] {};
        double double33 = financialDataAnalysis28.calculatePearsonCorrelation(doubleArray31, doubleArray32);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis34 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray38 = new double[] {};
        double double39 = financialDataAnalysis34.calculatePearsonCorrelation(doubleArray37, doubleArray38);
        double double40 = financialDataAnalysis28.calculateAverage(doubleArray37);
        double double41 = financialDataAnalysis6.calculateStandardDeviation(doubleArray37);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray46 = new double[] {};
        double double47 = financialDataAnalysis42.calculatePearsonCorrelation(doubleArray45, doubleArray46);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis48 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray52 = new double[] {};
        double double53 = financialDataAnalysis48.calculatePearsonCorrelation(doubleArray51, doubleArray52);
        double double54 = financialDataAnalysis42.calculateAverage(doubleArray51);
        double double55 = financialDataAnalysis6.calculateAverage(doubleArray51);
        double double56 = financialDataAnalysis0.calculateAverage(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertArrayEquals(doubleArray15, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertArrayEquals(doubleArray16, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 5.0d + "'", double18 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertArrayEquals(doubleArray23, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertArrayEquals(doubleArray24, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 5.0d + "'", double26 == 5.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 5.0d + "'", double27 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertArrayEquals(doubleArray31, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertArrayEquals(doubleArray37, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertArrayEquals(doubleArray38, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5.0d + "'", double40 == 5.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0710678118654755d + "'", double41 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertArrayEquals(doubleArray45, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertArrayEquals(doubleArray51, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertArrayEquals(doubleArray52, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5.0d + "'", double55 == 5.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 5.0d + "'", double56 == 5.0d);
    }

    @Test
    public void test05() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test05");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        double double12 = financialDataAnalysis0.calculateAverage(doubleArray9);
        java.lang.Class<?> wildcardClass13 = doubleArray9.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test06");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("hi!", "hi!");
        java.lang.Class<?> wildcardClass11 = securityService0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test07() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test07");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis8 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis9 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray12 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray13 = new double[] {};
        double double14 = financialDataAnalysis9.calculatePearsonCorrelation(doubleArray12, doubleArray13);
        double double15 = financialDataAnalysis8.calculateAverage(doubleArray12);
        double[] doubleArray16 = null;
        double double17 = financialDataAnalysis8.calculateAverage(doubleArray16);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis18 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray21 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray22 = new double[] {};
        double double23 = financialDataAnalysis18.calculatePearsonCorrelation(doubleArray21, doubleArray22);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis24 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray28 = new double[] {};
        double double29 = financialDataAnalysis24.calculatePearsonCorrelation(doubleArray27, doubleArray28);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis30 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray34 = new double[] {};
        double double35 = financialDataAnalysis30.calculatePearsonCorrelation(doubleArray33, doubleArray34);
        double double36 = financialDataAnalysis24.calculateAverage(doubleArray33);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis37 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis38 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray42 = new double[] {};
        double double43 = financialDataAnalysis38.calculatePearsonCorrelation(doubleArray41, doubleArray42);
        double double44 = financialDataAnalysis37.calculateAverage(doubleArray41);
        double double45 = financialDataAnalysis24.calculateAverage(doubleArray41);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis46 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray49 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray50 = new double[] {};
        double double51 = financialDataAnalysis46.calculatePearsonCorrelation(doubleArray49, doubleArray50);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis52 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray56 = new double[] {};
        double double57 = financialDataAnalysis52.calculatePearsonCorrelation(doubleArray55, doubleArray56);
        double double58 = financialDataAnalysis46.calculateAverage(doubleArray55);
        double double59 = financialDataAnalysis24.calculateStandardDeviation(doubleArray55);
        double double60 = financialDataAnalysis8.calculatePearsonCorrelation(doubleArray21, doubleArray55);
        double double61 = financialDataAnalysis0.calculateAverage(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertArrayEquals(doubleArray12, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertArrayEquals(doubleArray13, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 5.0d + "'", double15 == 5.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertArrayEquals(doubleArray21, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertArrayEquals(doubleArray22, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertArrayEquals(doubleArray27, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertArrayEquals(doubleArray28, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertArrayEquals(doubleArray33, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertArrayEquals(doubleArray34, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 5.0d + "'", double36 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertArrayEquals(doubleArray42, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 5.0d + "'", double44 == 5.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 5.0d + "'", double45 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertArrayEquals(doubleArray49, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertArrayEquals(doubleArray50, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertArrayEquals(doubleArray55, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertArrayEquals(doubleArray56, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 5.0d + "'", double58 == 5.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 7.0710678118654755d + "'", double59 == 7.0710678118654755d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 5.0d + "'", double61 == 5.0d);
    }

    @Test
    public void test08() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test08");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        java.lang.Class<?> wildcardClass3 = securityService0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test09() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test09");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        double[] doubleArray8 = null;
        double double9 = financialDataAnalysis0.calculateAverage(doubleArray8);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis10 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray14 = new double[] {};
        double double15 = financialDataAnalysis10.calculatePearsonCorrelation(doubleArray13, doubleArray14);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis16 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray20 = new double[] {};
        double double21 = financialDataAnalysis16.calculatePearsonCorrelation(doubleArray19, doubleArray20);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        double double28 = financialDataAnalysis16.calculateAverage(doubleArray25);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis29 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis30 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray34 = new double[] {};
        double double35 = financialDataAnalysis30.calculatePearsonCorrelation(doubleArray33, doubleArray34);
        double double36 = financialDataAnalysis29.calculateAverage(doubleArray33);
        double double37 = financialDataAnalysis16.calculateAverage(doubleArray33);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis38 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray42 = new double[] {};
        double double43 = financialDataAnalysis38.calculatePearsonCorrelation(doubleArray41, doubleArray42);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis44 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray48 = new double[] {};
        double double49 = financialDataAnalysis44.calculatePearsonCorrelation(doubleArray47, doubleArray48);
        double double50 = financialDataAnalysis38.calculateAverage(doubleArray47);
        double double51 = financialDataAnalysis16.calculateStandardDeviation(doubleArray47);
        double double52 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray13, doubleArray47);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis53 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray56 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray57 = new double[] {};
        double double58 = financialDataAnalysis53.calculatePearsonCorrelation(doubleArray56, doubleArray57);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis59 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray63 = new double[] {};
        double double64 = financialDataAnalysis59.calculatePearsonCorrelation(doubleArray62, doubleArray63);
        double double65 = financialDataAnalysis53.calculateAverage(doubleArray62);
        double double66 = financialDataAnalysis0.calculateAverage(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertArrayEquals(doubleArray13, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertArrayEquals(doubleArray14, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertArrayEquals(doubleArray20, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 5.0d + "'", double28 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertArrayEquals(doubleArray33, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertArrayEquals(doubleArray34, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 5.0d + "'", double36 == 5.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5.0d + "'", double37 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertArrayEquals(doubleArray42, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertArrayEquals(doubleArray48, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0710678118654755d + "'", double51 == 7.0710678118654755d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertArrayEquals(doubleArray56, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertArrayEquals(doubleArray57, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertArrayEquals(doubleArray62, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertArrayEquals(doubleArray63, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 5.0d + "'", double65 == 5.0d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 5.0d + "'", double66 == 5.0d);
    }

    @Test
    public void test10() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test10");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis12 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray16 = new double[] {};
        double double17 = financialDataAnalysis12.calculatePearsonCorrelation(doubleArray15, doubleArray16);
        double double18 = financialDataAnalysis6.calculateAverage(doubleArray15);
        double double19 = financialDataAnalysis0.calculateAverage(doubleArray15);
        java.lang.Class<?> wildcardClass20 = doubleArray15.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertArrayEquals(doubleArray15, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertArrayEquals(doubleArray16, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 5.0d + "'", double18 == 5.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 5.0d + "'", double19 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test11() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test11");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        double double12 = financialDataAnalysis0.calculateAverage(doubleArray9);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis13 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray18 = new double[] {};
        double double19 = financialDataAnalysis14.calculatePearsonCorrelation(doubleArray17, doubleArray18);
        double double20 = financialDataAnalysis13.calculateAverage(doubleArray17);
        double double21 = financialDataAnalysis0.calculateAverage(doubleArray17);
        java.lang.Class<?> wildcardClass22 = financialDataAnalysis0.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 5.0d + "'", double21 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test12() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test12");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("hi!", "hi!");
        java.lang.String str12 = securityService0.encryptData("\177o&");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\006\026U" + "'", str12, "\006\026U");
    }

    @Test
    public void test13() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test13");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        boolean boolean5 = securityService0.validateUser("", "\177o&");
        java.lang.String str7 = securityService0.encryptData("\006\026U");
        boolean boolean10 = securityService0.validateUser("", "ue\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ue\n" + "'", str7, "ue\n");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test14() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test14");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        boolean boolean3 = securityService0.validateUser("\006\026U", "\177o&");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test15() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test15");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        double double12 = financialDataAnalysis0.calculateAverage(doubleArray9);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis13 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray18 = new double[] {};
        double double19 = financialDataAnalysis14.calculatePearsonCorrelation(doubleArray17, doubleArray18);
        double double20 = financialDataAnalysis13.calculateAverage(doubleArray17);
        double double21 = financialDataAnalysis0.calculateAverage(doubleArray17);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis28 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray32 = new double[] {};
        double double33 = financialDataAnalysis28.calculatePearsonCorrelation(doubleArray31, doubleArray32);
        double double34 = financialDataAnalysis22.calculateAverage(doubleArray31);
        double double35 = financialDataAnalysis0.calculateStandardDeviation(doubleArray31);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis36 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis37 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray41 = new double[] {};
        double double42 = financialDataAnalysis37.calculatePearsonCorrelation(doubleArray40, doubleArray41);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis43 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray47 = new double[] {};
        double double48 = financialDataAnalysis43.calculatePearsonCorrelation(doubleArray46, doubleArray47);
        double double49 = financialDataAnalysis37.calculateAverage(doubleArray46);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis50 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis51 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray55 = new double[] {};
        double double56 = financialDataAnalysis51.calculatePearsonCorrelation(doubleArray54, doubleArray55);
        double double57 = financialDataAnalysis50.calculateAverage(doubleArray54);
        double double58 = financialDataAnalysis37.calculateAverage(doubleArray54);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis59 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray63 = new double[] {};
        double double64 = financialDataAnalysis59.calculatePearsonCorrelation(doubleArray62, doubleArray63);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis65 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray69 = new double[] {};
        double double70 = financialDataAnalysis65.calculatePearsonCorrelation(doubleArray68, doubleArray69);
        double double71 = financialDataAnalysis59.calculateAverage(doubleArray68);
        double double72 = financialDataAnalysis37.calculateStandardDeviation(doubleArray68);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis73 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray77 = new double[] {};
        double double78 = financialDataAnalysis73.calculatePearsonCorrelation(doubleArray76, doubleArray77);
        double double79 = financialDataAnalysis36.calculatePearsonCorrelation(doubleArray68, doubleArray76);
        double double80 = financialDataAnalysis0.calculateStandardDeviation(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 5.0d + "'", double21 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertArrayEquals(doubleArray31, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 5.0d + "'", double34 == 5.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0710678118654755d + "'", double35 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertArrayEquals(doubleArray40, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertArrayEquals(doubleArray54, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertArrayEquals(doubleArray55, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 5.0d + "'", double57 == 5.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 5.0d + "'", double58 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertArrayEquals(doubleArray62, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertArrayEquals(doubleArray63, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertArrayEquals(doubleArray68, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertArrayEquals(doubleArray69, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 5.0d + "'", double71 == 5.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 7.0710678118654755d + "'", double72 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertArrayEquals(doubleArray76, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertArrayEquals(doubleArray77, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 7.0710678118654755d + "'", double80 == 7.0710678118654755d);
    }

    @Test
    public void test16() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test16");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("\177o&", "hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test17() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test17");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        double[] doubleArray8 = null;
        double double9 = financialDataAnalysis0.calculateAverage(doubleArray8);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis10 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis11 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray14 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray15 = new double[] {};
        double double16 = financialDataAnalysis11.calculatePearsonCorrelation(doubleArray14, doubleArray15);
        double double17 = financialDataAnalysis10.calculateAverage(doubleArray14);
        double[] doubleArray18 = null;
        double double19 = financialDataAnalysis10.calculateAverage(doubleArray18);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis20 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray24 = new double[] {};
        double double25 = financialDataAnalysis20.calculatePearsonCorrelation(doubleArray23, doubleArray24);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis26 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray30 = new double[] {};
        double double31 = financialDataAnalysis26.calculatePearsonCorrelation(doubleArray29, doubleArray30);
        double double32 = financialDataAnalysis20.calculateAverage(doubleArray29);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis33 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis34 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray38 = new double[] {};
        double double39 = financialDataAnalysis34.calculatePearsonCorrelation(doubleArray37, doubleArray38);
        double double40 = financialDataAnalysis33.calculateAverage(doubleArray37);
        double double41 = financialDataAnalysis20.calculateAverage(doubleArray37);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis43 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray47 = new double[] {};
        double double48 = financialDataAnalysis43.calculatePearsonCorrelation(doubleArray46, doubleArray47);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis49 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray52 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray53 = new double[] {};
        double double54 = financialDataAnalysis49.calculatePearsonCorrelation(doubleArray52, doubleArray53);
        double double55 = financialDataAnalysis43.calculateAverage(doubleArray52);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis56 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis57 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray61 = new double[] {};
        double double62 = financialDataAnalysis57.calculatePearsonCorrelation(doubleArray60, doubleArray61);
        double double63 = financialDataAnalysis56.calculateAverage(doubleArray60);
        double double64 = financialDataAnalysis43.calculateAverage(doubleArray60);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis65 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray69 = new double[] {};
        double double70 = financialDataAnalysis65.calculatePearsonCorrelation(doubleArray68, doubleArray69);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis71 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray74 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray75 = new double[] {};
        double double76 = financialDataAnalysis71.calculatePearsonCorrelation(doubleArray74, doubleArray75);
        double double77 = financialDataAnalysis65.calculateAverage(doubleArray74);
        double double78 = financialDataAnalysis43.calculateStandardDeviation(doubleArray74);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis79 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray82 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray83 = new double[] {};
        double double84 = financialDataAnalysis79.calculatePearsonCorrelation(doubleArray82, doubleArray83);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis85 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray88 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray89 = new double[] {};
        double double90 = financialDataAnalysis85.calculatePearsonCorrelation(doubleArray88, doubleArray89);
        double double91 = financialDataAnalysis79.calculateAverage(doubleArray88);
        double double92 = financialDataAnalysis43.calculateAverage(doubleArray88);
        double double93 = financialDataAnalysis42.calculateAverage(doubleArray88);
        double double94 = financialDataAnalysis10.calculatePearsonCorrelation(doubleArray37, doubleArray88);
        double double95 = financialDataAnalysis0.calculateAverage(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertArrayEquals(doubleArray14, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertArrayEquals(doubleArray15, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 5.0d + "'", double17 == 5.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertArrayEquals(doubleArray23, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertArrayEquals(doubleArray24, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertArrayEquals(doubleArray29, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertArrayEquals(doubleArray30, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertArrayEquals(doubleArray37, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertArrayEquals(doubleArray38, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5.0d + "'", double40 == 5.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 5.0d + "'", double41 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertArrayEquals(doubleArray52, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertArrayEquals(doubleArray53, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5.0d + "'", double55 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertArrayEquals(doubleArray60, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertArrayEquals(doubleArray61, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5.0d + "'", double63 == 5.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 5.0d + "'", double64 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertArrayEquals(doubleArray68, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertArrayEquals(doubleArray69, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertArrayEquals(doubleArray74, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertArrayEquals(doubleArray75, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 5.0d + "'", double77 == 5.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 7.0710678118654755d + "'", double78 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertArrayEquals(doubleArray82, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertArrayEquals(doubleArray83, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertArrayEquals(doubleArray88, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertArrayEquals(doubleArray89, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 5.0d + "'", double91 == 5.0d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 5.0d + "'", double92 == 5.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 5.0d + "'", double93 == 5.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 5.0d + "'", double95 == 5.0d);
    }

    @Test
    public void test18() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test18");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("\013\033T", "hi!");
        boolean boolean13 = securityService0.validateUser("\013\033T", "\177o&");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test19");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("", "hi!");
        java.lang.Class<?> wildcardClass11 = securityService0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test20() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test20");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        java.lang.String str4 = securityService0.decryptData("\177o&");
        java.lang.String str6 = securityService0.encryptData("");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\006\026U" + "'", str4, "\006\026U");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test21() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test21");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis8 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray12 = new double[] {};
        double double13 = financialDataAnalysis8.calculatePearsonCorrelation(doubleArray11, doubleArray12);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray18 = new double[] {};
        double double19 = financialDataAnalysis14.calculatePearsonCorrelation(doubleArray17, doubleArray18);
        double double20 = financialDataAnalysis8.calculateAverage(doubleArray17);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis21 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        double double28 = financialDataAnalysis21.calculateAverage(doubleArray25);
        double double29 = financialDataAnalysis8.calculateAverage(doubleArray25);
        double double30 = financialDataAnalysis0.calculateStandardDeviation(doubleArray25);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis31 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray35 = new double[] {};
        double double36 = financialDataAnalysis31.calculatePearsonCorrelation(doubleArray34, doubleArray35);
        double double37 = financialDataAnalysis0.calculateAverage(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertArrayEquals(doubleArray11, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertArrayEquals(doubleArray12, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 5.0d + "'", double28 == 5.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 5.0d + "'", double29 == 5.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0710678118654755d + "'", double30 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertArrayEquals(doubleArray34, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertArrayEquals(doubleArray35, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5.0d + "'", double37 == 5.0d);
    }

    @Test
    public void test22() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test22");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        double double12 = financialDataAnalysis0.calculateAverage(doubleArray9);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis13 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray16 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray17 = new double[] {};
        double double18 = financialDataAnalysis13.calculatePearsonCorrelation(doubleArray16, doubleArray17);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis19 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray22 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray23 = new double[] {};
        double double24 = financialDataAnalysis19.calculatePearsonCorrelation(doubleArray22, doubleArray23);
        double double25 = financialDataAnalysis13.calculateAverage(doubleArray22);
        double double26 = financialDataAnalysis0.calculateStandardDeviation(doubleArray22);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertArrayEquals(doubleArray16, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertArrayEquals(doubleArray22, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertArrayEquals(doubleArray23, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 5.0d + "'", double25 == 5.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 7.0710678118654755d + "'", double26 == 7.0710678118654755d);
    }

    @Test
    public void test23() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test23");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        boolean boolean5 = securityService0.validateUser("", "\177o&");
        java.lang.String str7 = securityService0.encryptData("\006\026U");
        java.lang.String str9 = securityService0.encryptData("\177o&");
        boolean boolean12 = securityService0.validateUser("\006\026U", "\006\026U");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ue\n" + "'", str7, "ue\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\006\026U" + "'", str9, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test24() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test24");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        double double12 = financialDataAnalysis0.calculateAverage(doubleArray9);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis13 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray18 = new double[] {};
        double double19 = financialDataAnalysis14.calculatePearsonCorrelation(doubleArray17, doubleArray18);
        double double20 = financialDataAnalysis13.calculateAverage(doubleArray17);
        double double21 = financialDataAnalysis0.calculateAverage(doubleArray17);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis28 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray32 = new double[] {};
        double double33 = financialDataAnalysis28.calculatePearsonCorrelation(doubleArray31, doubleArray32);
        double double34 = financialDataAnalysis22.calculateAverage(doubleArray31);
        double double35 = financialDataAnalysis0.calculateStandardDeviation(doubleArray31);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis36 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray40 = new double[] {};
        double double41 = financialDataAnalysis36.calculatePearsonCorrelation(doubleArray39, doubleArray40);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray46 = new double[] {};
        double double47 = financialDataAnalysis42.calculatePearsonCorrelation(doubleArray45, doubleArray46);
        double double48 = financialDataAnalysis36.calculateAverage(doubleArray45);
        double double49 = financialDataAnalysis0.calculateAverage(doubleArray45);
        java.lang.Class<?> wildcardClass50 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 5.0d + "'", double21 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertArrayEquals(doubleArray31, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 5.0d + "'", double34 == 5.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0710678118654755d + "'", double35 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertArrayEquals(doubleArray39, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertArrayEquals(doubleArray40, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertArrayEquals(doubleArray45, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 5.0d + "'", double48 == 5.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test25() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test25");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis12 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray16 = new double[] {};
        double double17 = financialDataAnalysis12.calculatePearsonCorrelation(doubleArray15, doubleArray16);
        double double18 = financialDataAnalysis6.calculateAverage(doubleArray15);
        double double19 = financialDataAnalysis0.calculateAverage(doubleArray15);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis20 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray24 = new double[] {};
        double double25 = financialDataAnalysis20.calculatePearsonCorrelation(doubleArray23, doubleArray24);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis26 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray29 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray30 = new double[] {};
        double double31 = financialDataAnalysis26.calculatePearsonCorrelation(doubleArray29, doubleArray30);
        double double32 = financialDataAnalysis20.calculateAverage(doubleArray29);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis33 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis34 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray38 = new double[] {};
        double double39 = financialDataAnalysis34.calculatePearsonCorrelation(doubleArray37, doubleArray38);
        double double40 = financialDataAnalysis33.calculateAverage(doubleArray37);
        double double41 = financialDataAnalysis20.calculateAverage(doubleArray37);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis43 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray47 = new double[] {};
        double double48 = financialDataAnalysis43.calculatePearsonCorrelation(doubleArray46, doubleArray47);
        double double49 = financialDataAnalysis42.calculateAverage(doubleArray46);
        double[] doubleArray50 = null;
        double double51 = financialDataAnalysis42.calculateAverage(doubleArray50);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis52 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray56 = new double[] {};
        double double57 = financialDataAnalysis52.calculatePearsonCorrelation(doubleArray55, doubleArray56);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis58 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray61 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray62 = new double[] {};
        double double63 = financialDataAnalysis58.calculatePearsonCorrelation(doubleArray61, doubleArray62);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis64 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray68 = new double[] {};
        double double69 = financialDataAnalysis64.calculatePearsonCorrelation(doubleArray67, doubleArray68);
        double double70 = financialDataAnalysis58.calculateAverage(doubleArray67);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis71 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis72 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray75 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray76 = new double[] {};
        double double77 = financialDataAnalysis72.calculatePearsonCorrelation(doubleArray75, doubleArray76);
        double double78 = financialDataAnalysis71.calculateAverage(doubleArray75);
        double double79 = financialDataAnalysis58.calculateAverage(doubleArray75);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis80 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray83 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray84 = new double[] {};
        double double85 = financialDataAnalysis80.calculatePearsonCorrelation(doubleArray83, doubleArray84);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis86 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray89 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray90 = new double[] {};
        double double91 = financialDataAnalysis86.calculatePearsonCorrelation(doubleArray89, doubleArray90);
        double double92 = financialDataAnalysis80.calculateAverage(doubleArray89);
        double double93 = financialDataAnalysis58.calculateStandardDeviation(doubleArray89);
        double double94 = financialDataAnalysis42.calculatePearsonCorrelation(doubleArray55, doubleArray89);
        double double95 = financialDataAnalysis20.calculateAverage(doubleArray89);
        double double96 = financialDataAnalysis0.calculateStandardDeviation(doubleArray89);
        java.lang.Class<?> wildcardClass97 = financialDataAnalysis0.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertArrayEquals(doubleArray15, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertArrayEquals(doubleArray16, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 5.0d + "'", double18 == 5.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 5.0d + "'", double19 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertArrayEquals(doubleArray23, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertArrayEquals(doubleArray24, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertArrayEquals(doubleArray29, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertArrayEquals(doubleArray30, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5.0d + "'", double32 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertArrayEquals(doubleArray37, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertArrayEquals(doubleArray38, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5.0d + "'", double40 == 5.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 5.0d + "'", double41 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertArrayEquals(doubleArray55, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertArrayEquals(doubleArray56, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertArrayEquals(doubleArray61, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertArrayEquals(doubleArray62, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertArrayEquals(doubleArray67, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertArrayEquals(doubleArray68, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 5.0d + "'", double70 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertArrayEquals(doubleArray75, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertArrayEquals(doubleArray76, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 5.0d + "'", double78 == 5.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 5.0d + "'", double79 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertArrayEquals(doubleArray83, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertArrayEquals(doubleArray84, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertArrayEquals(doubleArray89, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertArrayEquals(doubleArray90, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 5.0d + "'", double92 == 5.0d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 7.0710678118654755d + "'", double93 == 7.0710678118654755d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1.0d + "'", double94 == 1.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 5.0d + "'", double95 == 5.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 7.0710678118654755d + "'", double96 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test26() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test26");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis8 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray12 = new double[] {};
        double double13 = financialDataAnalysis8.calculatePearsonCorrelation(doubleArray11, doubleArray12);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray18 = new double[] {};
        double double19 = financialDataAnalysis14.calculatePearsonCorrelation(doubleArray17, doubleArray18);
        double double20 = financialDataAnalysis8.calculateAverage(doubleArray17);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis21 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        double double28 = financialDataAnalysis21.calculateAverage(doubleArray25);
        double double29 = financialDataAnalysis8.calculateAverage(doubleArray25);
        double double30 = financialDataAnalysis0.calculateStandardDeviation(doubleArray25);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis31 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray34 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray35 = new double[] {};
        double double36 = financialDataAnalysis31.calculatePearsonCorrelation(doubleArray34, doubleArray35);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis37 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis38 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray42 = new double[] {};
        double double43 = financialDataAnalysis38.calculatePearsonCorrelation(doubleArray41, doubleArray42);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis44 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray48 = new double[] {};
        double double49 = financialDataAnalysis44.calculatePearsonCorrelation(doubleArray47, doubleArray48);
        double double50 = financialDataAnalysis38.calculateAverage(doubleArray47);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis51 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis52 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray55 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray56 = new double[] {};
        double double57 = financialDataAnalysis52.calculatePearsonCorrelation(doubleArray55, doubleArray56);
        double double58 = financialDataAnalysis51.calculateAverage(doubleArray55);
        double double59 = financialDataAnalysis38.calculateAverage(doubleArray55);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis60 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray63 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray64 = new double[] {};
        double double65 = financialDataAnalysis60.calculatePearsonCorrelation(doubleArray63, doubleArray64);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis66 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray69 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray70 = new double[] {};
        double double71 = financialDataAnalysis66.calculatePearsonCorrelation(doubleArray69, doubleArray70);
        double double72 = financialDataAnalysis60.calculateAverage(doubleArray69);
        double double73 = financialDataAnalysis38.calculateStandardDeviation(doubleArray69);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis74 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray77 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray78 = new double[] {};
        double double79 = financialDataAnalysis74.calculatePearsonCorrelation(doubleArray77, doubleArray78);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis80 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray83 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray84 = new double[] {};
        double double85 = financialDataAnalysis80.calculatePearsonCorrelation(doubleArray83, doubleArray84);
        double double86 = financialDataAnalysis74.calculateAverage(doubleArray83);
        double double87 = financialDataAnalysis38.calculateAverage(doubleArray83);
        double double88 = financialDataAnalysis37.calculateAverage(doubleArray83);
        double double89 = financialDataAnalysis31.calculateAverage(doubleArray83);
        double double90 = financialDataAnalysis0.calculateAverage(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertArrayEquals(doubleArray11, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertArrayEquals(doubleArray12, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 5.0d + "'", double28 == 5.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 5.0d + "'", double29 == 5.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 7.0710678118654755d + "'", double30 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertArrayEquals(doubleArray34, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertArrayEquals(doubleArray35, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertArrayEquals(doubleArray42, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertArrayEquals(doubleArray48, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertArrayEquals(doubleArray55, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertArrayEquals(doubleArray56, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 5.0d + "'", double58 == 5.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 5.0d + "'", double59 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertArrayEquals(doubleArray63, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertArrayEquals(doubleArray64, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertArrayEquals(doubleArray69, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertArrayEquals(doubleArray70, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 5.0d + "'", double72 == 5.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 7.0710678118654755d + "'", double73 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertArrayEquals(doubleArray77, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertArrayEquals(doubleArray78, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertArrayEquals(doubleArray83, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertArrayEquals(doubleArray84, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 5.0d + "'", double86 == 5.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 5.0d + "'", double87 == 5.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 5.0d + "'", double88 == 5.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 5.0d + "'", double89 == 5.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 5.0d + "'", double90 == 5.0d);
    }

    @Test
    public void test27() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test27");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        double[] doubleArray8 = null;
        double double9 = financialDataAnalysis0.calculateAverage(doubleArray8);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis10 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray14 = new double[] {};
        double double15 = financialDataAnalysis10.calculatePearsonCorrelation(doubleArray13, doubleArray14);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis16 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray20 = new double[] {};
        double double21 = financialDataAnalysis16.calculatePearsonCorrelation(doubleArray19, doubleArray20);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        double double28 = financialDataAnalysis16.calculateAverage(doubleArray25);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis29 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis30 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray34 = new double[] {};
        double double35 = financialDataAnalysis30.calculatePearsonCorrelation(doubleArray33, doubleArray34);
        double double36 = financialDataAnalysis29.calculateAverage(doubleArray33);
        double double37 = financialDataAnalysis16.calculateAverage(doubleArray33);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis38 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray42 = new double[] {};
        double double43 = financialDataAnalysis38.calculatePearsonCorrelation(doubleArray41, doubleArray42);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis44 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray48 = new double[] {};
        double double49 = financialDataAnalysis44.calculatePearsonCorrelation(doubleArray47, doubleArray48);
        double double50 = financialDataAnalysis38.calculateAverage(doubleArray47);
        double double51 = financialDataAnalysis16.calculateStandardDeviation(doubleArray47);
        double double52 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray13, doubleArray47);
        java.lang.Class<?> wildcardClass53 = financialDataAnalysis0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertArrayEquals(doubleArray13, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertArrayEquals(doubleArray14, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertArrayEquals(doubleArray20, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 5.0d + "'", double28 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertArrayEquals(doubleArray33, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertArrayEquals(doubleArray34, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 5.0d + "'", double36 == 5.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5.0d + "'", double37 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertArrayEquals(doubleArray42, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertArrayEquals(doubleArray48, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0710678118654755d + "'", double51 == 7.0710678118654755d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test28() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test28");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis12 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray15 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray16 = new double[] {};
        double double17 = financialDataAnalysis12.calculatePearsonCorrelation(doubleArray15, doubleArray16);
        double double18 = financialDataAnalysis6.calculateAverage(doubleArray15);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis19 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis20 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray24 = new double[] {};
        double double25 = financialDataAnalysis20.calculatePearsonCorrelation(doubleArray23, doubleArray24);
        double double26 = financialDataAnalysis19.calculateAverage(doubleArray23);
        double double27 = financialDataAnalysis6.calculateAverage(doubleArray23);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis28 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray32 = new double[] {};
        double double33 = financialDataAnalysis28.calculatePearsonCorrelation(doubleArray31, doubleArray32);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis34 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray37 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray38 = new double[] {};
        double double39 = financialDataAnalysis34.calculatePearsonCorrelation(doubleArray37, doubleArray38);
        double double40 = financialDataAnalysis28.calculateAverage(doubleArray37);
        double double41 = financialDataAnalysis6.calculateStandardDeviation(doubleArray37);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray46 = new double[] {};
        double double47 = financialDataAnalysis42.calculatePearsonCorrelation(doubleArray45, doubleArray46);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis48 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray52 = new double[] {};
        double double53 = financialDataAnalysis48.calculatePearsonCorrelation(doubleArray51, doubleArray52);
        double double54 = financialDataAnalysis42.calculateAverage(doubleArray51);
        double double55 = financialDataAnalysis6.calculateAverage(doubleArray51);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis56 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis57 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray61 = new double[] {};
        double double62 = financialDataAnalysis57.calculatePearsonCorrelation(doubleArray60, doubleArray61);
        double double63 = financialDataAnalysis56.calculateAverage(doubleArray60);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis64 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray67 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray68 = new double[] {};
        double double69 = financialDataAnalysis64.calculatePearsonCorrelation(doubleArray67, doubleArray68);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis70 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray74 = new double[] {};
        double double75 = financialDataAnalysis70.calculatePearsonCorrelation(doubleArray73, doubleArray74);
        double double76 = financialDataAnalysis64.calculateAverage(doubleArray73);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis77 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis78 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray81 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray82 = new double[] {};
        double double83 = financialDataAnalysis78.calculatePearsonCorrelation(doubleArray81, doubleArray82);
        double double84 = financialDataAnalysis77.calculateAverage(doubleArray81);
        double double85 = financialDataAnalysis64.calculateAverage(doubleArray81);
        double double86 = financialDataAnalysis56.calculateStandardDeviation(doubleArray81);
        double double87 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray51, doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertArrayEquals(doubleArray15, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertArrayEquals(doubleArray16, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 5.0d + "'", double18 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertArrayEquals(doubleArray23, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertArrayEquals(doubleArray24, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 5.0d + "'", double26 == 5.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 5.0d + "'", double27 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertArrayEquals(doubleArray31, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertArrayEquals(doubleArray37, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertArrayEquals(doubleArray38, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 5.0d + "'", double40 == 5.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 7.0710678118654755d + "'", double41 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertArrayEquals(doubleArray45, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertArrayEquals(doubleArray51, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertArrayEquals(doubleArray52, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 5.0d + "'", double55 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertArrayEquals(doubleArray60, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertArrayEquals(doubleArray61, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5.0d + "'", double63 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertArrayEquals(doubleArray67, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertArrayEquals(doubleArray68, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertArrayEquals(doubleArray73, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertArrayEquals(doubleArray74, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 5.0d + "'", double76 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertArrayEquals(doubleArray81, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertArrayEquals(doubleArray82, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 5.0d + "'", double84 == 5.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 5.0d + "'", double85 == 5.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 7.0710678118654755d + "'", double86 == 7.0710678118654755d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1.0d + "'", double87 == 1.0d);
    }

    @Test
    public void test29() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test29");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("\013\033T", "hi!");
        boolean boolean13 = securityService0.validateUser("\006\026U", "\013\033T");
        java.lang.String str15 = securityService0.decryptData("hi!");
        java.lang.String str17 = securityService0.decryptData("ue\n");
        boolean boolean20 = securityService0.validateUser("", "\006\026U");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\013\033T" + "'", str15, "\013\033T");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "*:o" + "'", str17, "*:o");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test30() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test30");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        double[] doubleArray8 = null;
        double double9 = financialDataAnalysis0.calculateAverage(doubleArray8);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis10 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray14 = new double[] {};
        double double15 = financialDataAnalysis10.calculatePearsonCorrelation(doubleArray13, doubleArray14);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis16 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray20 = new double[] {};
        double double21 = financialDataAnalysis16.calculatePearsonCorrelation(doubleArray19, doubleArray20);
        double double22 = financialDataAnalysis10.calculateAverage(doubleArray19);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis23 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis24 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray28 = new double[] {};
        double double29 = financialDataAnalysis24.calculatePearsonCorrelation(doubleArray27, doubleArray28);
        double double30 = financialDataAnalysis23.calculateAverage(doubleArray27);
        double double31 = financialDataAnalysis10.calculateAverage(doubleArray27);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis32 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis33 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray37 = new double[] {};
        double double38 = financialDataAnalysis33.calculatePearsonCorrelation(doubleArray36, doubleArray37);
        double double39 = financialDataAnalysis32.calculateAverage(doubleArray36);
        double[] doubleArray40 = null;
        double double41 = financialDataAnalysis32.calculateAverage(doubleArray40);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray46 = new double[] {};
        double double47 = financialDataAnalysis42.calculatePearsonCorrelation(doubleArray45, doubleArray46);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis48 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray51 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray52 = new double[] {};
        double double53 = financialDataAnalysis48.calculatePearsonCorrelation(doubleArray51, doubleArray52);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis54 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray57 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray58 = new double[] {};
        double double59 = financialDataAnalysis54.calculatePearsonCorrelation(doubleArray57, doubleArray58);
        double double60 = financialDataAnalysis48.calculateAverage(doubleArray57);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis61 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis62 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray65 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray66 = new double[] {};
        double double67 = financialDataAnalysis62.calculatePearsonCorrelation(doubleArray65, doubleArray66);
        double double68 = financialDataAnalysis61.calculateAverage(doubleArray65);
        double double69 = financialDataAnalysis48.calculateAverage(doubleArray65);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis70 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray73 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray74 = new double[] {};
        double double75 = financialDataAnalysis70.calculatePearsonCorrelation(doubleArray73, doubleArray74);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis76 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray79 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray80 = new double[] {};
        double double81 = financialDataAnalysis76.calculatePearsonCorrelation(doubleArray79, doubleArray80);
        double double82 = financialDataAnalysis70.calculateAverage(doubleArray79);
        double double83 = financialDataAnalysis48.calculateStandardDeviation(doubleArray79);
        double double84 = financialDataAnalysis32.calculatePearsonCorrelation(doubleArray45, doubleArray79);
        double double85 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray27, doubleArray45);
        java.lang.Class<?> wildcardClass86 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertArrayEquals(doubleArray13, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertArrayEquals(doubleArray14, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertArrayEquals(doubleArray20, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertArrayEquals(doubleArray27, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertArrayEquals(doubleArray28, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 5.0d + "'", double30 == 5.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5.0d + "'", double31 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertArrayEquals(doubleArray36, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertArrayEquals(doubleArray37, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 5.0d + "'", double39 == 5.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertArrayEquals(doubleArray45, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertArrayEquals(doubleArray51, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertArrayEquals(doubleArray52, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertArrayEquals(doubleArray57, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertArrayEquals(doubleArray58, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 5.0d + "'", double60 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertArrayEquals(doubleArray65, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertArrayEquals(doubleArray66, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 5.0d + "'", double68 == 5.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 5.0d + "'", double69 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertArrayEquals(doubleArray73, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertArrayEquals(doubleArray74, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertArrayEquals(doubleArray79, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertArrayEquals(doubleArray80, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 5.0d + "'", double82 == 5.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 7.0710678118654755d + "'", double83 == 7.0710678118654755d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test31() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test31");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\006\026U");
        java.lang.String str7 = securityService0.encryptData("");
        java.lang.String str9 = securityService0.encryptData("\177o&");
        java.lang.String str11 = securityService0.encryptData("*:o");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\006\026U" + "'", str9, "\006\026U");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "O_\026" + "'", str11, "O_\026");
    }

    @Test
    public void test32() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test32");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray3 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray4 = new double[] {};
        double double5 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray3, doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis6 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray9 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray10 = new double[] {};
        double double11 = financialDataAnalysis6.calculatePearsonCorrelation(doubleArray9, doubleArray10);
        double double12 = financialDataAnalysis0.calculateAverage(doubleArray9);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis13 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray18 = new double[] {};
        double double19 = financialDataAnalysis14.calculatePearsonCorrelation(doubleArray17, doubleArray18);
        double double20 = financialDataAnalysis13.calculateAverage(doubleArray17);
        double double21 = financialDataAnalysis0.calculateAverage(doubleArray17);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis28 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray32 = new double[] {};
        double double33 = financialDataAnalysis28.calculatePearsonCorrelation(doubleArray31, doubleArray32);
        double double34 = financialDataAnalysis22.calculateAverage(doubleArray31);
        double double35 = financialDataAnalysis0.calculateStandardDeviation(doubleArray31);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis36 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray40 = new double[] {};
        double double41 = financialDataAnalysis36.calculatePearsonCorrelation(doubleArray39, doubleArray40);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray46 = new double[] {};
        double double47 = financialDataAnalysis42.calculatePearsonCorrelation(doubleArray45, doubleArray46);
        double double48 = financialDataAnalysis36.calculateAverage(doubleArray45);
        double double49 = financialDataAnalysis0.calculateAverage(doubleArray45);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis50 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis51 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray54 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray55 = new double[] {};
        double double56 = financialDataAnalysis51.calculatePearsonCorrelation(doubleArray54, doubleArray55);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis57 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray60 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray61 = new double[] {};
        double double62 = financialDataAnalysis57.calculatePearsonCorrelation(doubleArray60, doubleArray61);
        double double63 = financialDataAnalysis51.calculateAverage(doubleArray60);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis64 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis65 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray69 = new double[] {};
        double double70 = financialDataAnalysis65.calculatePearsonCorrelation(doubleArray68, doubleArray69);
        double double71 = financialDataAnalysis64.calculateAverage(doubleArray68);
        double double72 = financialDataAnalysis51.calculateAverage(doubleArray68);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis73 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray76 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray77 = new double[] {};
        double double78 = financialDataAnalysis73.calculatePearsonCorrelation(doubleArray76, doubleArray77);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis79 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray82 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray83 = new double[] {};
        double double84 = financialDataAnalysis79.calculatePearsonCorrelation(doubleArray82, doubleArray83);
        double double85 = financialDataAnalysis73.calculateAverage(doubleArray82);
        double double86 = financialDataAnalysis51.calculateStandardDeviation(doubleArray82);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis87 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray90 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray91 = new double[] {};
        double double92 = financialDataAnalysis87.calculatePearsonCorrelation(doubleArray90, doubleArray91);
        double double93 = financialDataAnalysis50.calculatePearsonCorrelation(doubleArray82, doubleArray90);
        double double94 = financialDataAnalysis0.calculateAverage(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertArrayEquals(doubleArray3, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertArrayEquals(doubleArray9, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 5.0d + "'", double12 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 5.0d + "'", double20 == 5.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 5.0d + "'", double21 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertArrayEquals(doubleArray31, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 5.0d + "'", double34 == 5.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 7.0710678118654755d + "'", double35 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertArrayEquals(doubleArray39, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertArrayEquals(doubleArray40, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertArrayEquals(doubleArray45, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 5.0d + "'", double48 == 5.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertArrayEquals(doubleArray54, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertArrayEquals(doubleArray55, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertArrayEquals(doubleArray60, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertArrayEquals(doubleArray61, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double62));
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5.0d + "'", double63 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertArrayEquals(doubleArray68, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertArrayEquals(doubleArray69, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 5.0d + "'", double71 == 5.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 5.0d + "'", double72 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertArrayEquals(doubleArray76, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertArrayEquals(doubleArray77, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertArrayEquals(doubleArray82, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertArrayEquals(doubleArray83, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 5.0d + "'", double85 == 5.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 7.0710678118654755d + "'", double86 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertArrayEquals(doubleArray90, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertArrayEquals(doubleArray91, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1.0d + "'", double93 == 1.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 5.0d + "'", double94 == 5.0d);
    }

    @Test
    public void test33() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test33");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("\013\033T", "hi!");
        boolean boolean13 = securityService0.validateUser("\006\026U", "\013\033T");
        java.lang.String str15 = securityService0.decryptData("hi!");
        java.lang.String str17 = securityService0.decryptData("ue\n");
        boolean boolean20 = securityService0.validateUser("ue\n", "\006\026U");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\013\033T" + "'", str15, "\013\033T");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "*:o" + "'", str17, "*:o");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test34() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test34");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\006\026U");
        boolean boolean5 = securityService0.validateUser("ue\n", "ue\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ue\n" + "'", str2, "ue\n");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test35() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test35");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis7 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray11 = new double[] {};
        double double12 = financialDataAnalysis7.calculatePearsonCorrelation(doubleArray10, doubleArray11);
        double double13 = financialDataAnalysis1.calculateAverage(doubleArray10);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis15 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray19 = new double[] {};
        double double20 = financialDataAnalysis15.calculatePearsonCorrelation(doubleArray18, doubleArray19);
        double double21 = financialDataAnalysis14.calculateAverage(doubleArray18);
        double double22 = financialDataAnalysis1.calculateAverage(doubleArray18);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis23 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray27 = new double[] {};
        double double28 = financialDataAnalysis23.calculatePearsonCorrelation(doubleArray26, doubleArray27);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis29 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray33 = new double[] {};
        double double34 = financialDataAnalysis29.calculatePearsonCorrelation(doubleArray32, doubleArray33);
        double double35 = financialDataAnalysis23.calculateAverage(doubleArray32);
        double double36 = financialDataAnalysis1.calculateStandardDeviation(doubleArray32);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis37 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray41 = new double[] {};
        double double42 = financialDataAnalysis37.calculatePearsonCorrelation(doubleArray40, doubleArray41);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis43 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray47 = new double[] {};
        double double48 = financialDataAnalysis43.calculatePearsonCorrelation(doubleArray46, doubleArray47);
        double double49 = financialDataAnalysis37.calculateAverage(doubleArray46);
        double double50 = financialDataAnalysis1.calculateAverage(doubleArray46);
        double double51 = financialDataAnalysis0.calculateAverage(doubleArray46);
        java.lang.Class<?> wildcardClass52 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertArrayEquals(doubleArray11, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 5.0d + "'", double13 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 5.0d + "'", double21 == 5.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertArrayEquals(doubleArray27, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertArrayEquals(doubleArray33, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 5.0d + "'", double35 == 5.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0710678118654755d + "'", double36 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertArrayEquals(doubleArray40, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 5.0d + "'", double51 == 5.0d);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test36() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test36");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        double[] doubleArray8 = null;
        double double9 = financialDataAnalysis0.calculateAverage(doubleArray8);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis10 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray14 = new double[] {};
        double double15 = financialDataAnalysis10.calculatePearsonCorrelation(doubleArray13, doubleArray14);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis16 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray20 = new double[] {};
        double double21 = financialDataAnalysis16.calculatePearsonCorrelation(doubleArray19, doubleArray20);
        double double22 = financialDataAnalysis10.calculateAverage(doubleArray19);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis23 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis24 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray27 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray28 = new double[] {};
        double double29 = financialDataAnalysis24.calculatePearsonCorrelation(doubleArray27, doubleArray28);
        double double30 = financialDataAnalysis23.calculateAverage(doubleArray27);
        double double31 = financialDataAnalysis10.calculateAverage(doubleArray27);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis32 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis33 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray36 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray37 = new double[] {};
        double double38 = financialDataAnalysis33.calculatePearsonCorrelation(doubleArray36, doubleArray37);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis39 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray42 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray43 = new double[] {};
        double double44 = financialDataAnalysis39.calculatePearsonCorrelation(doubleArray42, doubleArray43);
        double double45 = financialDataAnalysis33.calculateAverage(doubleArray42);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis46 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis47 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray50 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray51 = new double[] {};
        double double52 = financialDataAnalysis47.calculatePearsonCorrelation(doubleArray50, doubleArray51);
        double double53 = financialDataAnalysis46.calculateAverage(doubleArray50);
        double double54 = financialDataAnalysis33.calculateAverage(doubleArray50);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis55 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray58 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray59 = new double[] {};
        double double60 = financialDataAnalysis55.calculatePearsonCorrelation(doubleArray58, doubleArray59);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis61 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray64 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray65 = new double[] {};
        double double66 = financialDataAnalysis61.calculatePearsonCorrelation(doubleArray64, doubleArray65);
        double double67 = financialDataAnalysis55.calculateAverage(doubleArray64);
        double double68 = financialDataAnalysis33.calculateStandardDeviation(doubleArray64);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis69 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray72 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray73 = new double[] {};
        double double74 = financialDataAnalysis69.calculatePearsonCorrelation(doubleArray72, doubleArray73);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis75 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray78 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray79 = new double[] {};
        double double80 = financialDataAnalysis75.calculatePearsonCorrelation(doubleArray78, doubleArray79);
        double double81 = financialDataAnalysis69.calculateAverage(doubleArray78);
        double double82 = financialDataAnalysis33.calculateAverage(doubleArray78);
        double double83 = financialDataAnalysis32.calculateAverage(doubleArray78);
        double double84 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray27, doubleArray78);
        double[] doubleArray85 = null;
        double double86 = financialDataAnalysis0.calculateStandardDeviation(doubleArray85);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis87 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis88 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray91 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray92 = new double[] {};
        double double93 = financialDataAnalysis88.calculatePearsonCorrelation(doubleArray91, doubleArray92);
        double double94 = financialDataAnalysis87.calculateAverage(doubleArray91);
        double double95 = financialDataAnalysis0.calculateAverage(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertArrayEquals(doubleArray13, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertArrayEquals(doubleArray14, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertArrayEquals(doubleArray20, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertArrayEquals(doubleArray27, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertArrayEquals(doubleArray28, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double29));
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 5.0d + "'", double30 == 5.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5.0d + "'", double31 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertArrayEquals(doubleArray36, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertArrayEquals(doubleArray37, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double38));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertArrayEquals(doubleArray42, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertArrayEquals(doubleArray43, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double44));
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 5.0d + "'", double45 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertArrayEquals(doubleArray50, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertArrayEquals(doubleArray51, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 5.0d + "'", double53 == 5.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 5.0d + "'", double54 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertArrayEquals(doubleArray58, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertArrayEquals(doubleArray59, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertArrayEquals(doubleArray64, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertArrayEquals(doubleArray65, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 5.0d + "'", double67 == 5.0d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 7.0710678118654755d + "'", double68 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertArrayEquals(doubleArray72, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertArrayEquals(doubleArray73, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertArrayEquals(doubleArray78, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertArrayEquals(doubleArray79, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 5.0d + "'", double81 == 5.0d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 5.0d + "'", double82 == 5.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 5.0d + "'", double83 == 5.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1.0d + "'", double84 == 1.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertArrayEquals(doubleArray91, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertArrayEquals(doubleArray92, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 5.0d + "'", double94 == 5.0d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 5.0d + "'", double95 == 5.0d);
    }

    @Test
    public void test37() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test37");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("", "hi!");
        java.lang.String str12 = securityService0.decryptData("\177o&");
        java.lang.Class<?> wildcardClass13 = securityService0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\006\026U" + "'", str12, "\006\026U");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test38() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test38");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("");
        boolean boolean10 = securityService0.validateUser("", "ue\n");
        boolean boolean13 = securityService0.validateUser("", "*:o");
        java.lang.String str15 = securityService0.decryptData("O_\026");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "6&e" + "'", str15, "6&e");
    }

    @Test
    public void test39() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test39");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        boolean boolean5 = securityService0.validateUser("", "\177o&");
        java.lang.String str7 = securityService0.encryptData("\006\026U");
        java.lang.String str9 = securityService0.encryptData("6&e");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ue\n" + "'", str7, "ue\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "EU:" + "'", str9, "EU:");
    }

    @Test
    public void test40() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test40");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("\013\033T", "hi!");
        boolean boolean13 = securityService0.validateUser("\006\026U", "\013\033T");
        java.lang.String str15 = securityService0.decryptData("hi!");
        boolean boolean18 = securityService0.validateUser("*:o", "hi!");
        boolean boolean21 = securityService0.validateUser("\177o&", "\006\026U");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\013\033T" + "'", str15, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test41() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test41");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\006\026U");
        java.lang.String str7 = securityService0.encryptData("");
        java.lang.String str9 = securityService0.encryptData("\177o&");
        java.lang.String str11 = securityService0.encryptData("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\006\026U" + "'", str9, "\006\026U");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\013\033T" + "'", str11, "\013\033T");
    }

    @Test
    public void test42() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test42");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        boolean boolean5 = securityService0.validateUser("", "\177o&");
        boolean boolean8 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str10 = securityService0.decryptData("");
        java.lang.String str12 = securityService0.encryptData("");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test43() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test43");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        boolean boolean5 = securityService0.validateUser("", "\177o&");
        boolean boolean8 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str10 = securityService0.decryptData("");
        java.lang.String str12 = securityService0.decryptData("*:o");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "O_\026" + "'", str12, "O_\026");
    }

    @Test
    public void test44() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test44");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        boolean boolean5 = securityService0.validateUser("", "\177o&");
        java.lang.String str7 = securityService0.decryptData("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\013\033T" + "'", str7, "\013\033T");
    }

    @Test
    public void test45() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test45");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\006\026U");
        java.lang.String str7 = securityService0.encryptData("");
        java.lang.String str9 = securityService0.encryptData("");
        java.lang.String str11 = securityService0.decryptData("");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test46() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test46");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\006\026U");
        java.lang.Class<?> wildcardClass3 = securityService0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ue\n" + "'", str2, "ue\n");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test47() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test47");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.encryptData("hi!");
        boolean boolean5 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str7 = securityService0.encryptData("\013\033T");
        boolean boolean10 = securityService0.validateUser("\013\033T", "hi!");
        boolean boolean13 = securityService0.validateUser("\006\026U", "\013\033T");
        java.lang.String str15 = securityService0.decryptData("hi!");
        boolean boolean18 = securityService0.validateUser("*:o", "hi!");
        boolean boolean21 = securityService0.validateUser("\177o&", "\177o&");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\013\033T" + "'", str2, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\177o&" + "'", str7, "\177o&");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\013\033T" + "'", str15, "\013\033T");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test48() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test48");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis8 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray11 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray12 = new double[] {};
        double double13 = financialDataAnalysis8.calculatePearsonCorrelation(doubleArray11, doubleArray12);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray17 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray18 = new double[] {};
        double double19 = financialDataAnalysis14.calculatePearsonCorrelation(doubleArray17, doubleArray18);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis20 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray23 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray24 = new double[] {};
        double double25 = financialDataAnalysis20.calculatePearsonCorrelation(doubleArray23, doubleArray24);
        double double26 = financialDataAnalysis14.calculateAverage(doubleArray23);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis27 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis28 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray31 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray32 = new double[] {};
        double double33 = financialDataAnalysis28.calculatePearsonCorrelation(doubleArray31, doubleArray32);
        double double34 = financialDataAnalysis27.calculateAverage(doubleArray31);
        double double35 = financialDataAnalysis14.calculateAverage(doubleArray31);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis36 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray39 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray40 = new double[] {};
        double double41 = financialDataAnalysis36.calculatePearsonCorrelation(doubleArray39, doubleArray40);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis42 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray45 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray46 = new double[] {};
        double double47 = financialDataAnalysis42.calculatePearsonCorrelation(doubleArray45, doubleArray46);
        double double48 = financialDataAnalysis36.calculateAverage(doubleArray45);
        double double49 = financialDataAnalysis14.calculateStandardDeviation(doubleArray45);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis50 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray53 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray54 = new double[] {};
        double double55 = financialDataAnalysis50.calculatePearsonCorrelation(doubleArray53, doubleArray54);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis56 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray59 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray60 = new double[] {};
        double double61 = financialDataAnalysis56.calculatePearsonCorrelation(doubleArray59, doubleArray60);
        double double62 = financialDataAnalysis50.calculateAverage(doubleArray59);
        double double63 = financialDataAnalysis14.calculateAverage(doubleArray59);
        double double64 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray11, doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertArrayEquals(doubleArray11, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertArrayEquals(doubleArray12, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double13));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertArrayEquals(doubleArray17, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertArrayEquals(doubleArray23, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertArrayEquals(doubleArray24, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 5.0d + "'", double26 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertArrayEquals(doubleArray31, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 5.0d + "'", double34 == 5.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 5.0d + "'", double35 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertArrayEquals(doubleArray39, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertArrayEquals(doubleArray40, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertArrayEquals(doubleArray45, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 5.0d + "'", double48 == 5.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 7.0710678118654755d + "'", double49 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertArrayEquals(doubleArray53, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertArrayEquals(doubleArray54, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertArrayEquals(doubleArray59, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertArrayEquals(doubleArray60, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double61));
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 5.0d + "'", double62 == 5.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5.0d + "'", double63 == 5.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1.0d + "'", double64 == 1.0d);
    }

    @Test
    public void test49() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test49");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis7 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray10 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray11 = new double[] {};
        double double12 = financialDataAnalysis7.calculatePearsonCorrelation(doubleArray10, doubleArray11);
        double double13 = financialDataAnalysis1.calculateAverage(doubleArray10);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis14 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis15 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray18 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray19 = new double[] {};
        double double20 = financialDataAnalysis15.calculatePearsonCorrelation(doubleArray18, doubleArray19);
        double double21 = financialDataAnalysis14.calculateAverage(doubleArray18);
        double double22 = financialDataAnalysis1.calculateAverage(doubleArray18);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis23 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray26 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray27 = new double[] {};
        double double28 = financialDataAnalysis23.calculatePearsonCorrelation(doubleArray26, doubleArray27);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis29 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray32 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray33 = new double[] {};
        double double34 = financialDataAnalysis29.calculatePearsonCorrelation(doubleArray32, doubleArray33);
        double double35 = financialDataAnalysis23.calculateAverage(doubleArray32);
        double double36 = financialDataAnalysis1.calculateStandardDeviation(doubleArray32);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis37 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray40 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray41 = new double[] {};
        double double42 = financialDataAnalysis37.calculatePearsonCorrelation(doubleArray40, doubleArray41);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis43 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray46 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray47 = new double[] {};
        double double48 = financialDataAnalysis43.calculatePearsonCorrelation(doubleArray46, doubleArray47);
        double double49 = financialDataAnalysis37.calculateAverage(doubleArray46);
        double double50 = financialDataAnalysis1.calculateAverage(doubleArray46);
        double double51 = financialDataAnalysis0.calculateAverage(doubleArray46);
        double[] doubleArray52 = null;
        double double53 = financialDataAnalysis0.calculateAverage(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertArrayEquals(doubleArray10, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertArrayEquals(doubleArray11, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 5.0d + "'", double13 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertArrayEquals(doubleArray18, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 5.0d + "'", double21 == 5.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 5.0d + "'", double22 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertArrayEquals(doubleArray27, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertArrayEquals(doubleArray32, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertArrayEquals(doubleArray33, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 5.0d + "'", double35 == 5.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 7.0710678118654755d + "'", double36 == 7.0710678118654755d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertArrayEquals(doubleArray40, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double42));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertArrayEquals(doubleArray46, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 5.0d + "'", double49 == 5.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 5.0d + "'", double51 == 5.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
    }

    @Test
    public void test50() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test50");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        double[] doubleArray8 = null;
        double double9 = financialDataAnalysis0.calculateAverage(doubleArray8);
        java.lang.Class<?> wildcardClass10 = financialDataAnalysis0.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test51() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test51");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        java.lang.String str4 = securityService0.decryptData("\177o&");
        java.lang.Class<?> wildcardClass5 = securityService0.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\006\026U" + "'", str4, "\006\026U");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test52() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test52");
        imd.ufrn.SecurityService securityService0 = new imd.ufrn.SecurityService();
        java.lang.String str2 = securityService0.decryptData("\177o&");
        boolean boolean5 = securityService0.validateUser("", "\177o&");
        boolean boolean8 = securityService0.validateUser("\013\033T", "\013\033T");
        java.lang.String str10 = securityService0.encryptData("hi!");
        java.lang.String str12 = securityService0.encryptData("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "\006\026U" + "'", str2, "\006\026U");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\013\033T" + "'", str10, "\013\033T");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\013\033T" + "'", str12, "\013\033T");
    }

    @Test
    public void test53() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test53");
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis0 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis1 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray4 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray5 = new double[] {};
        double double6 = financialDataAnalysis1.calculatePearsonCorrelation(doubleArray4, doubleArray5);
        double double7 = financialDataAnalysis0.calculateAverage(doubleArray4);
        double[] doubleArray8 = null;
        double double9 = financialDataAnalysis0.calculateAverage(doubleArray8);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis10 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray13 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray14 = new double[] {};
        double double15 = financialDataAnalysis10.calculatePearsonCorrelation(doubleArray13, doubleArray14);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis16 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray19 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray20 = new double[] {};
        double double21 = financialDataAnalysis16.calculatePearsonCorrelation(doubleArray19, doubleArray20);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis22 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray25 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray26 = new double[] {};
        double double27 = financialDataAnalysis22.calculatePearsonCorrelation(doubleArray25, doubleArray26);
        double double28 = financialDataAnalysis16.calculateAverage(doubleArray25);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis29 = new imd.ufrn.FinancialDataAnalysis();
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis30 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray33 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray34 = new double[] {};
        double double35 = financialDataAnalysis30.calculatePearsonCorrelation(doubleArray33, doubleArray34);
        double double36 = financialDataAnalysis29.calculateAverage(doubleArray33);
        double double37 = financialDataAnalysis16.calculateAverage(doubleArray33);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis38 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray41 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray42 = new double[] {};
        double double43 = financialDataAnalysis38.calculatePearsonCorrelation(doubleArray41, doubleArray42);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis44 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray47 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray48 = new double[] {};
        double double49 = financialDataAnalysis44.calculatePearsonCorrelation(doubleArray47, doubleArray48);
        double double50 = financialDataAnalysis38.calculateAverage(doubleArray47);
        double double51 = financialDataAnalysis16.calculateStandardDeviation(doubleArray47);
        double double52 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray13, doubleArray47);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis53 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray56 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray57 = new double[] {};
        double double58 = financialDataAnalysis53.calculatePearsonCorrelation(doubleArray56, doubleArray57);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis59 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray62 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray63 = new double[] {};
        double double64 = financialDataAnalysis59.calculatePearsonCorrelation(doubleArray62, doubleArray63);
        imd.ufrn.FinancialDataAnalysis financialDataAnalysis65 = new imd.ufrn.FinancialDataAnalysis();
        double[] doubleArray68 = new double[] { (byte) 10, (byte) 0 };
        double[] doubleArray69 = new double[] {};
        double double70 = financialDataAnalysis65.calculatePearsonCorrelation(doubleArray68, doubleArray69);
        double double71 = financialDataAnalysis59.calculateAverage(doubleArray68);
        double double72 = financialDataAnalysis53.calculateAverage(doubleArray68);
        double[] doubleArray78 = new double[] { 100.0d, 1.0f, (-1), ' ', (byte) 10 };
        double double79 = financialDataAnalysis0.calculatePearsonCorrelation(doubleArray68, doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertArrayEquals(doubleArray4, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertArrayEquals(doubleArray5, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 5.0d + "'", double7 == 5.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertArrayEquals(doubleArray13, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertArrayEquals(doubleArray14, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertArrayEquals(doubleArray19, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertArrayEquals(doubleArray20, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertArrayEquals(doubleArray25, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertArrayEquals(doubleArray26, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 5.0d + "'", double28 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertArrayEquals(doubleArray33, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertArrayEquals(doubleArray34, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 5.0d + "'", double36 == 5.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5.0d + "'", double37 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertArrayEquals(doubleArray41, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertArrayEquals(doubleArray42, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertArrayEquals(doubleArray47, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertArrayEquals(doubleArray48, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 5.0d + "'", double50 == 5.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 7.0710678118654755d + "'", double51 == 7.0710678118654755d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1.0d + "'", double52 == 1.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertArrayEquals(doubleArray56, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertArrayEquals(doubleArray57, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertArrayEquals(doubleArray62, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertArrayEquals(doubleArray63, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertArrayEquals(doubleArray68, new double[] { 10.0d, 0.0d }, 1.0E-15);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertArrayEquals(doubleArray69, new double[] {}, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 5.0d + "'", double71 == 5.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 5.0d + "'", double72 == 5.0d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertArrayEquals(doubleArray78, new double[] { 100.0d, 1.0d, (-1.0d), 32.0d, 10.0d }, 1.0E-15);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
    }
}

